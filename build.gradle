plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11' // boot version 2.7점대로 수행했다. 3.x점대까지는 알고있는게 좋음
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.spring.practice' //java initializr에서 설정했던 그룹이름
version = '0.0.1-SNAPSHOT' // 빌드된 jar파일의 버전명

java {
	sourceCompatibility = '11'
}

repositories {
//	의존성(라이브러리)을 가져오는 대상 repository(저장소)
//	내부망에 구축되어 있는 프로젝트의 경우 nexus와 같은 라이브러리를 사용하여 내부망 repository사용
//	maven { url "http://nexus.XXXXX.com:8081/nexus/content/groups/public/" }
	mavenCentral()
}

// External Libraries에 라이브러리를 넣어놓는다.
// starter 종속성은 별도의 버전관리 필요없음.(알아서 호환성을 맞춰줌) -- 스프링 재단에서 관리
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
//	테스트 라이브러ㅓ리로 주로 JUnit사용
	useJUnitPlatform()
}
